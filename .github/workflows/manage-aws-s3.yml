name: Manage AWS S3

on:
  workflow_dispatch:
    inputs:
      bucketName:
        description: "Name of the S3 bucket"
        required: true
      awsRegion:
        description: "AWS Region for the cluster"
        required: true
      action:
        description: "Action to perform (apply/destroy)"
        required: true

jobs:
  create_s3:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./s3
    if: ${{ github.event.inputs.action == 'apply' }}
    steps:
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_CLI_PUB }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_CLI_SEC }}
          aws configure set default.region ${{ github.event.inputs.awsRegion }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform Format
        run: terraform fmt
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Apply
        run: terraform apply -var bucket=${{ github.event.inputs.bucketName }} -var awsRegion=${{ github.event.inputs.awsRegion }} -auto-approve

  destroy_s3:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./s3
    if: ${{ github.event.inputs.action == 'destroy' }}
    steps:
      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_CLI_PUB }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_CLI_SEC }}
          aws configure set default.region ${{ github.event.inputs.awsRegion }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      - name: Terraform Init
        run: terraform init
      - name: Terraform FMT
        run: terraform fmt
      - name: Terraform Validate
        run: terraform validate
      - name: Terraform Destroy
        run: terraform destroy -var bucket=${{ github.event.inputs.bucketName }} -var awsRegion=${{ github.event.inputs.awsRegion }} -auto-approve
